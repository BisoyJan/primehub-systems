version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: primehub-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
    networks:
      - primehub-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=primehub
      - DB_USERNAME=primehub_user
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: primehub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - primehub-network
    depends_on:
      - app
      - node

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: primehub-db
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: primehub
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: primehub_user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_HOST: '%'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - primehub-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:alpine
    container_name: primehub-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - primehub-network

  # Node.js for Vite Dev Server
  node:
    image: node:20-alpine
    container_name: primehub-node
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "5173:5173"
    command: sh -c "sleep 15 && npm install && npm run dev"
    networks:
      - primehub-network
    depends_on:
      - app
    restart: unless-stopped

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: primehub-queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        set -e
        echo "üöÄ Starting Queue Worker..."

        # Wait for database to be ready
        echo "‚è≥ Waiting for database..."
        until php artisan db:show 2>/dev/null; do
            echo "‚è≥ Database not ready yet, waiting..."
            sleep 2
        done

        echo "‚úÖ Database is ready!"
        echo "‚öôÔ∏è  Starting queue worker..."

        # Start queue worker
        exec php artisan queue:work redis --tries=3 --timeout=300 --sleep=3 --max-jobs=1000
    networks:
      - primehub-network
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=primehub
      - DB_USERNAME=primehub_user
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis

networks:
  primehub-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
