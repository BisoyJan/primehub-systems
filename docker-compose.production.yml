version: '3.8'

services:
  # Laravel Application (Production)
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
      target: production
    container_name: primehub-app-prod
    restart: always
    working_dir: /var/www
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
    networks:
      - primehub-network
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-primehub}
      - DB_USERNAME=${DB_USERNAME:-primehub_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis

  # Nginx Web Server (Production)
  nginx:
    image: nginx:alpine
    container_name: primehub-nginx-prod
    restart: always
    ports:
      - "${APP_PORT:-80}:80"
      - "${APP_SSL_PORT:-443}:443"
    volumes:
      - ./public:/var/www/public:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro  # SSL certificates
    networks:
      - primehub-network
    depends_on:
      - app

  # MySQL Database (Production)
  db:
    image: mysql:8.0
    container_name: primehub-db-prod
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-primehub}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME:-primehub_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    ports:
      - "3306:3306"
    networks:
      - primehub-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache & Queue (Production)
  redis:
    image: redis:alpine
    container_name: primehub-redis-prod
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - primehub-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}

  # Backup Service
  backup:
    image: mysql:8.0
    container_name: primehub-backup
    volumes:
      - ./backups:/backups
      - mysql-data:/var/lib/mysql:ro
    networks:
      - primehub-network
    depends_on:
      - db
    entrypoint: |
      bash -c 'while true; do
        mysqldump -h db -u ${DB_USERNAME:-primehub_user} -p${DB_PASSWORD} ${DB_DATABASE:-primehub} > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql;
        sleep 86400;
      done'

networks:
  primehub-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
